package tests;

import static org.junit.Assert.fail;
import static org.junit.jupiter.api.Assertions.assertEquals;

import java.util.stream.Stream;

import javax.swing.JLabel;

import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;

import frogger.FroggerComponent;
import frogger.FroggerState;
import frogger.PlayFrogger;

public class Testing_Game_LabelChange {
	@ParameterizedTest
	@MethodSource("inputStream")
	void LevelChanges(int hit, String expected) {
		PlayFrogger froggerPlay = new PlayFrogger();
		FroggerComponent comp = new FroggerComponent();
		comp.engine.state = FroggerState.HIT;
		
		JLabel expectedLabel = null;;
		expectedLabel.setText(expected);
		
		//need to reach further level from 1
		try {
			while(hit > 0) {
				comp.update();
				hit--;
				comp.engine.state = FroggerState.HIT;
			}
			
			assertEquals(expectedLabel, froggerPlay.lab2);
		} catch (InterruptedException e) {
			fail("Test failed: InterruptedException");
			e.printStackTrace();
		}
	}
	
	private static Stream<Arguments> inputStream(){
		return Stream.of(
			Arguments.of(1, 0),
			Arguments.of(2, 0),
			Arguments.of(3, 0),
			Arguments.of(4, 0),
			Arguments.of(5, 0),
			Arguments.of(6, 0),
			Arguments.of(7, 0),
			Arguments.of(8, 0)
		);
	}
}
