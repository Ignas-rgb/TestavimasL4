package tests;

import static org.junit.Assert.fail;
import static org.junit.jupiter.api.Assertions.assertEquals;

import java.util.Vector;
import java.util.stream.Stream;

import javax.swing.JLabel;

import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;

import frogger.FroggerComponent;
import frogger.FroggerLevel;
import frogger.FroggerLevelEngine;
import frogger.FroggerState;
import frogger.PlayFrogger;

public class Testing_FrogMovement {
	@ParameterizedTest
	@MethodSource("inputStream")
	void LevelChanges(int direction, int expectedX, int expectedY) {
		PlayFrogger froggerPlay = new PlayFrogger();
		FroggerComponent comp = new FroggerComponent();
		int frogMovementSpeed = 4; //how fast frog moves to specific direction
		
		
		try {
			comp.engine.moveLeft();
			comp.update();
			
			assertEquals();
		} catch (InterruptedException e) {
			fail("Test failed: InterruptedException");
			e.printStackTrace();
		}
	}
	
	
	//1-right 2-up 3-left 4-down
	private static Stream<Arguments> inputStream(){
		return Stream.of(
			Arguments.of(0,  1, 1),
			Arguments.of(1,  1, 1),
			Arguments.of(2,  1, 1),
			Arguments.of(3,  1, 1),
			Arguments.of(4,  1, 1)
		);
	}
	
}
